#!/bin/bash -e
#
# ==============================================================================
# PAQUETE: asistente-actualizacion
# ARCHIVO: postinst
# DESCRIPCIÓN: Configura el sistema despues la instalación del paquete.
# COPYRIGHT:
#  (C) 2010 Luis Alejandro Martínez Faneyth <martinez.faneyth@gmail.com>
#  (C) 2010 Diego Alberto Aguilera Zambrano <daguilera85@gmail.com>
#  (C) 2010 Carlos Alejandro Guerrero Mora <guerrerocarlos@gmail.com>
#  (C) 2010 Francisco Javier Vásquez Guerrero <franjvasquezg@gmail.com>
# LICENCIA: GPL3
# ==============================================================================
#
# Este programa es software libre. Puede redistribuirlo y/o modificarlo bajo los
# términos de la Licencia Pública General de GNU (versión 3).

PKG="asistente-actualizacion"
BASE="/usr/share/asistente-actualizacion/"
LOCAL="/usr/share/asistente-actualizacion/listas/canaima-local-paquetes.list"
DESKTOP_FILE="/usr/share/applications/asistente-actualizacion.desktop"

case ${1} in

	configure)

	# Listando todos los paquetes presentes en el sistema (Canaima 2.1)
	dpkg-query -W -f='${Package}\t${Status}\n' | grep "install ok installed" | awk '{ print $1 }' > ${LOCAL}
	
	# Permitiendo lectura/escritura para todos los usuarios
	chmod 777 /usr/share/asistente-actualizacion/log/principal.log

        # Para cada usuario en /home/ ...
	for HOME_U in /home/*?; do

		# Obteniendo sólo el nombre del usuario
		USUARIO=$( basename ${HOME_U} )

		# Y en caso de que el usuario sea un usuario activo (existente en /etc/shadow) ...
		if [ $( grep -c "${USUARIO}:.*:.*:.*:.*:.*:::" /etc/shadow ) == 1 ] \
		&& [ $( grep -c "${USUARIO}:.*:.*:.*:.*:.*:/bin/.*sh" /etc/passwd ) == 1 ] \
		&& [ -d ${HOME_U}/.config ] \
		&& [ -d ${HOME_U} ]; then

			# Asegurando que el directorio .config/asistente-actualizacion/ esté creado
			mkdir -p /home/${USUARIO}/.config/asistente-actualizacion/

			# con permisos apropiados
			chown ${USUARIO}:${USUARIO} /home/${USUARIO}/.config/asistente-actualizacion/
			
			# Copia del archivo de configuración que determina si debe ejecutarse asistente-actualizacion al inicio o no
			cp /etc/skel/.config/asistente-actualizacion/mostrar.conf /home/${USUARIO}/.config/asistente-actualizacion/
			
			# con permisos apropiados
			chown ${USUARIO}:${USUARIO} /home/${USUARIO}/.config/asistente-actualizacion/mostrar.conf
		fi
	done

	flag_270=1
	flag_450=1
	flag_455=1
	flag_pc=0
	CONTROL_PARENTAL=0

	dmitypes=( "bios-vendor" "system-manufacturer" "system-product-name" "system-version" "baseboard-manufacturer" "baseboard-product-name" "chassis-manufacturer" "chassis-type" "processor-manufacturer" "processor-version" "processor-frequency" "baseboard-asset-tag" )

	dmitypes_270=( "AmericanMegatrendsInc." "J.P.SaCouto" "IntelpoweredclassmatePC" "MagII" "J.P.SaCouto" "IntelpoweredclassmatePC" "J.P.SaCouto" "Notebook" "Intel" "Intel(R)Atom(TM)CPUN270@1.60GHz" "1600MHz" "0" )

	dmitypes_450=( "Phoenix" "IntelCorporation" "IntelpoweredclassmatePC" "MPPV" "IntelCorporation" "IntelpoweredclassmatePC" "Intel" "Other" "Intel" "C1" "1600MHz" "PTLNanjing" )

	dmitypes_455=( "Phoenix" "IntelCorporation" "IntelpoweredclassmatePC" "BPPV" "IntelCorporation" "IntelpoweredclassmatePC" "Intel" "Notebook" "Intel" "C1" "1600MHz" "PTLNanjing" )

	dmitypesnum=${#dmitypes[@]}
	dmitypes_local[${dmitypesnum}]=""

	echo $dmitypesnum
	for ((i=0;i<$dmitypesnum;i++)); do
		dmitypes_local[${i}]=$( dmidecode --string $( echo ${dmitypes[${i}]} ) | sed -e "s/[ ]*//g" )
	done    

	for ((i=0;i<$dmitypesnum;i++)); do
		[ "${dmitypes_local[${i}]}" != "${dmitypes_270[${i}]}" ] && flag_270=0
		[ "${dmitypes_local[${i}]}" != "${dmitypes_450[${i}]}" ] && flag_450=0
		[ "${dmitypes_local[${i}]}" != "${dmitypes_455[${i}]}" ] && flag_455=0
	done

	[ $( dpkg-query -W -f='${Package}\t${Status}\n' canaima-control-parental | grep -c "install ok installed" ) == 1 ] && CONTROL_PARENTAL=1

	[ $flag_270 == 0 ] && [ $flag_450 == 0 ] && [ $flag_455 == 0 ] && flag_pc=1

	[ ${flag_pc} == 0 ] && [ ${CONTROL_PARENTAL} == 1 ] && [ -e ${DESKTOP_FILE} ] && rm -rf ${DESKTOP_FILE}

	;;

        abort-upgrade|abort-remove|abort-deconfigure)
        ;;

        *)

		echo "postinst no reconoce el argumento '"${1}"'" >&2
		exit 1

        ;;

esac

#DEBHELPER#

exit 0
